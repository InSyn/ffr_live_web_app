---
description: 
globs: 
alwaysApply: true
---
# Styling Conventions & CSS Best Practices

## CSS Architecture
This project uses CSS Custom Properties (CSS Variables) for a design token system that supports both light and dark themes.

## File Organization
- **Global Styles**: [frontend/src/assets/styles/](mdc:frontend/src/assets/styles)
  - [colors.css](mdc:frontend/src/assets/styles/colors.css) - Color palette and theme variables
  - [defaults.css](mdc:frontend/src/assets/styles/defaults.css) - Base styles and typography
  - [sizes.css](mdc:frontend/src/assets/styles/sizes.css) - Responsive breakpoints

## CSS Custom Properties Naming Convention
```css
/* Pattern: --{category}--{variant}: value; */
--background--primary: #dadadf;
--background--card: rgba(242,242,248,0.92);
--text-default: #080811;
--text-muted: #757589;
```

## Theme Implementation
### Light Theme (Default)
```css
:root {
  --accent: #1a9ad7;
  --success: #46C289;
  --background--primary: #dadadf;
  --text-default: #080811;
}
```

### Dark Theme
```css
.theme-dark {
  --background--primary: #2f2f34;
  --text-default: #f2f2f7;
  /* Override light theme variables */
}
```

## Responsive Design Patterns
### Mobile-First Approach
```css
/* Base styles for mobile */
html { font-size: 8px; }

/* Tablet and up */
@media screen and (min-width: 720px) {
  html { font-size: 10px; }
}

/* Desktop and up */
@media screen and (min-width: 1024px) {
  html { font-size: 12px; }
}
```

### Breakpoint Variables
Use the predefined breakpoint variables from [sizes.css](mdc:frontend/src/assets/styles/sizes.css):
- `--mobile-small: 480px`
- `--mobile-default: 640px`
- `--tablet-small: 720px`
- `--tablet-default: 920px`
- `--desktop-small: 1280px`
- `--desktop-big: 1980px`
- `--desktop-2k: 2560px`

## Typography Standards
### Font Stack
```css
font-family: "Petrov Sans-Trial", Avenir, Helvetica, Arial, sans-serif;
letter-spacing: 0.01em;
```

### Font Weights Available
- Thin: 100
- ExtraLight: 200
- Light: 300
- Regular: 400
- SemiBold: 600
- Bold: 700
- ExtraBold: 800
- Black: 900

## Component Styling Guidelines
### Vue SFC Style Blocks
```vue
<style lang="scss" scoped>
/* Use CSS custom properties for theming */
.component {
  background-color: var(--background--card);
  color: var(--text-default);
  
  /* Use relative units */
  padding: 1rem;
  margin: 0.5rem;
  
  /* Responsive patterns */
  @media screen and (max-width: 720px) {
    padding: 0.5rem;
  }
}
</style>
```

### Scrollbar Customization
```css
&::-webkit-scrollbar {
  height: 6px;
  width: 6px;
}

&::-webkit-scrollbar-track {
  background: transparent;
}

&::-webkit-scrollbar-thumb {
  background: var(--text-contrast-hovered);
  border-radius: 4px;
  cursor: pointer;
}
```

## Accessibility Considerations
1. **Color Contrast**: Ensure WCAG AA compliance
2. **Focus States**: Use consistent focus ring styles
3. **Touch Targets**: Minimum 44px for mobile interactions
4. **Semantic Colors**: Use meaningful color names (success, error, warning)

## Animation & Transitions
- Use CSS transitions for interactive elements
- Keep animations subtle and purposeful
- Consider `prefers-reduced-motion` for accessibility

## Best Practices
1. **Always use CSS custom properties** for colors and theme-related values
2. **Mobile-first responsive design** with progressive enhancement
3. **Scoped styles** in Vue components to prevent style bleeding
4. **Semantic naming** for CSS classes and variables
5. **Consistent spacing** using a systematic scale
6. **Performance**: Minimize CSS specificity and avoid deep nesting
