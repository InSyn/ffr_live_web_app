services:
  # Backend Service in Docker
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: ffr_backend_dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DEBUG=ffr:*
      - SERVICE_ADMIN_LOGIN=service_admin
      - SERVICE_ADMIN_PASSWORD=service_pwd
      - DB_HOSTNAME=database
      - DB_PORT=27017
      - DB_USER=admin
      - DB_PWD=password
      - DB=ffr_live_dev
      - JWT_SECRET=dev-jwt-secret-key
      - PORT=8080
    volumes:
      - ./backend:/app:rw
      - backend_node_modules:/app/node_modules
    ports:
      - '8081:8080' # Backend API
      - '9229:9229' # Node.js debug port
    depends_on:
      - database
      - cache
    command: ['npm', 'run', 'dev']

  # MongoDB Database
  database:
    image: mongo:7.0
    container_name: ffr_database_dev
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=ffr_live_dev
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  # Redis Cache
  cache:
    image: redis:7-alpine
    container_name: ffr_cache_dev
    restart: unless-stopped
    command: ['redis-server', '--requirepass', 'devpassword']
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # MongoDB Management UI
  mongo-admin:
    image: mongo-express:latest
    container_name: ffr_mongo_admin
    restart: unless-stopped
    ports:
      - '8082:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@database:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    depends_on:
      - database

volumes:
  backend_node_modules:
  mongodb_data:
  redis_data:
